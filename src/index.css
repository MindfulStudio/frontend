/* Importing Tailwind Layers: */
@tailwind base; /* tailwinds base styles */
@tailwind components; /* tailwind component classes (e.g. form elements, buttons) */
@tailwind utilities; /* tailwind utility classes (e.g. "mt-4", "text-center) */

@layer base {
  /* 1. Add a new layer to the base layer, which then will be added and processed with tailwinds base styles */

  /* Font Faces to use locally stored google fonts */
  @font-face {
    font-family: "Cantarell";
    src: url("./assets/fonts/Cantarell/Cantarell-Regular.woff") format("woff2");
    font-style: normal;
    font-weight: 400;
  }

  @font-face {
    font-family: "Cantarell";
    src: url("./assets/fonts/Cantarell/Cantarell-Bold.woff") format("woff2");
    font-style: bold;
    font-weight: 700;
  }

  @font-face {
    font-family: "Yatra One";
    src: url("./assets/fonts/Yatra_One/YatraOne-Regular.woff") format("woff2");
    font-style: normal;
    font-weight: 400;
  }

  /* Here, we can define the values for our variables: */

  :root {
    /* variables used around the stylesheet:
    These variables are then referenced in tailwind.config.js to generate utility classes like bg-background, text-foreground, etc. */
    /* Important: If we change the name of the variable here, we have to change the key in the tailwind.config.js as well! */
    --background: 358 100% 93%; /* #ffd9da */
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%; /* #ffffff */
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    /* custom test */
    --customtest: 180 100% 50%; /* cyan */
    --customtest-foreground: 0 0% 100%; /* white */
    /* custom google fonts */
    --font-primary: "Cantarell", sans-serif;
    --font-highlight: "Yatra One", sans-serif;
    --selected-subemotion:  /* #FFD9DA */ 358 100% 93%;
  }

  /* Dark Mode */
  .dark {
    --background: 217 48% 39%; /* #345995 */
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    /* custom google fonts */
    --font-primary: "Cantarell", sans-serif;
    --font-display: "Yatra One", sans-serif;
  }
}

/* 2. Applying Styles Using Tailwind-Utilities for consistent styling across multiple elements without having to write repetitive CSS */

@layer base {
  /* this adds another layer to the base layer */
  * {
    /* apply to all elements */

    @apply border-border;
    /* This applies the border-border utility class to all elements. This sets the border color to --border. */
  }
  body {
    @apply bg-background text-foreground font-primary;
    /* This sets the background color to --background, the text color to --foreground and the --font-primary is the font-family by default for all elements, unless you change them in the components. */
  }
}

/* By using @apply, we ensure that the same styles are consistently applied across multiple elements. If we need to change a style, we can update it in one place (in our CSS variables or utility classes), and it will reflect across all elements using @apply */

/* Instead of using the universal selector (*), we can target specific elements where we want for example the border-border utility to be applied:

e.g.:

A) Apply border only to specific elements:

@layer base {
  div, p, h1, h2, h3, h4, h5, h6, .card, .container {
    @apply border-border;
  }


B) Exclude buttons by overriding their border style


@layer base {
  * {
    @apply border-border;
  }
  
  button {
    border-color: transparent;
  }
}
 */
